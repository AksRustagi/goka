// Code generated by go-bindata.
// sources:
// web/templates/common/base.go.html
// web/templates/common/head.go.html
// web/templates/common/menu.go.html
// web/templates/monitor/details.go.html
// web/templates/monitor/index.go.html
// web/templates/monitor/menu.go.html
// web/templates/query/index.go.html
// web/templates/index/index.go.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _webTemplatesCommonBaseGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4a\x2c\x4e\x55\xaa\xad\xe5\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x01\xaa\xc9\x48\x4d\x4c\x51\x52\xd0\x03\xa9\x82\x48\xda\x24\xe5\xa7\x54\xa2\xaa\xc9\x4d\xcd\x2b\x85\xa8\x41\x16\x4d\xce\xcf\x2b\x49\xcd\x2b\x81\x6a\xd6\x87\x68\xb3\xd1\x87\x59\x91\x9a\x97\x02\x14\x07\x04\x00\x00\xff\xff\xfd\x8f\xc0\x67\x8d\x00\x00\x00")

func webTemplatesCommonBaseGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonBaseGoHtml,
		"web/templates/common/base.go.html",
	)
}

func webTemplatesCommonBaseGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonBaseGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/base.go.html", size: 141, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesCommonHeadGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\x4d\x73\xe2\x38\x10\xbd\xe7\x57\xb8\x7c\xe1\x90\xb5\x85\x81\x5d\x48\x0a\x67\x2b\x4b\x76\xf8\xc8\x17\x81\x04\xc2\x5c\xa6\x84\xd5\xb6\xe5\xc8\x92\x23\xc9\x80\x87\xe1\xbf\x8f\x1c\x86\x84\xca\x64\x3e\x72\x18\x4e\xea\x47\xf7\xeb\xf7\x9e\x55\x5a\xaf\x09\x84\x94\x83\x65\xc7\x80\x89\xbd\xd9\x1c\xb4\xcb\xc3\xc9\x81\x65\x7e\xed\x14\x34\xb6\x82\x18\x4b\x05\xda\xb7\x73\x1d\x3a\x2d\x7b\xff\xaf\x58\xeb\xcc\x81\xc7\x9c\x2e\x7c\x7b\xe5\xe4\xd8\x09\x44\x9a\x61\x4d\xe7\x0c\x6c\x2b\x10\x5c\x03\x37\x73\x14\x7c\x20\x11\xec\x26\x35\xd5\x0c\x4e\xd6\x6b\x37\xc3\x11\x7c\x7a\xaa\x36\x9b\x36\xda\xc2\x7b\xe4\x1c\xa7\xe0\xdb\x04\x54\x20\x69\xa6\xa9\xe0\x7b\x94\xf6\xf7\x8d\x0b\x0a\xcb\x4c\x48\xbd\xd7\xb5\xa4\x44\xc7\x3e\x81\x05\x0d\xc0\x79\x2a\xfe\xb2\x28\xa7\x9a\x62\xe6\xa8\x00\x33\xf0\xbd\x1d\x11\xa3\xfc\xc1\x8a\x25\x84\x7e\xa5\x34\xa5\x8e\x11\x0a\x0d\x8d\x72\x23\x21\x22\x06\x38\xa3\xca\x35\xe6\x50\xa0\xd4\xbf\x21\x4e\x29\x2b\xfc\xeb\x0c\xf8\xe1\x18\x73\x75\xd8\x11\x9c\x00\x57\x40\x8e\xeb\xd5\xea\x97\x67\xbc\x62\x49\x60\x7e\x45\xe9\x82\x81\x8a\x01\x74\xc5\xd2\x45\x06\x7e\x45\xc3\x4a\x97\x4c\x95\xfd\xe5\x65\xaf\xfd\xd2\x6b\x6f\xd5\xd8\x3b\x35\x29\x5e\x05\x84\xbb\x73\x21\xb4\xd2\x12\x67\x65\x51\x0a\x7a\x06\x50\xdd\xad\xbb\xcd\x92\xf6\x05\x73\x53\x6a\xba\x94\xb2\x8d\x6d\x0d\x91\xa4\xba\x30\x3b\x62\x5c\x6f\x35\x9c\xff\x26\x33\x4a\xc7\xfd\x0f\x70\xee\x91\x6e\x3a\x18\x9d\x3e\x14\x41\xde\x3b\xed\x8d\xa2\x7a\xed\x3a\xbd\x0b\x96\xcb\xa6\xe0\xf5\xd1\x8c\x44\x8d\x09\x3e\x1c\xa6\xe3\x5b\xf5\x19\x9d\xff\xd3\x5a\xcc\xc9\xff\x49\xdc\xc8\x4d\xce\x52\x28\x25\x24\x8d\x28\xf7\x6d\xcc\x05\x2f\x52\x91\x2b\xfb\x4f\x9b\x72\x74\x0c\x29\xfc\xcc\x9a\xec\x15\xe2\xca\xa3\x23\x35\xb9\x9f\x34\xf8\x59\x75\x90\x6b\xc6\xbb\x58\xb1\xce\x20\xef\x34\xf3\x65\x42\xf2\xe9\xd1\x78\x22\x2f\x16\xa3\x99\x10\xc3\xac\x36\x9f\xce\xa2\x34\x1a\xdc\xf4\xef\x97\x0c\x8d\xb3\x5f\x59\xdb\xde\x48\x4b\xc9\xc0\xb7\x11\xc2\x09\x5e\xbd\xbe\x26\x25\x86\x18\x9d\x2b\x94\x3c\xe6\x20\x0b\xe4\xb9\x9e\xe7\x56\xbf\x55\x4f\xda\x13\x43\xd7\x46\x5b\xaa\x37\x78\xdf\x1b\x51\xf2\xfa\xb3\x27\x6f\x46\x73\x1b\xfc\xdd\xbf\xa1\xf3\x6a\xad\xf9\xb8\x28\x92\xf1\x65\xd8\x4b\xae\x2f\xf1\xc5\x43\x98\x4f\x27\xab\x8f\xab\xbb\x21\xef\x0c\x4e\x9b\xac\x96\x76\xa6\x57\xfd\xac\x7b\x94\x76\x3b\x67\xad\x65\xf7\xaa\x1f\x0c\xcf\x9a\xb7\x2b\xfc\xe3\x68\x7e\xc3\x8b\xd1\x9e\x98\x7c\x98\xc8\x49\xc8\xb0\x84\x57\x51\x31\x41\xb0\x8a\x8d\x70\xd4\x70\xbd\xa6\xeb\xed\x80\x77\xa4\x45\xea\x66\x81\x90\x91\x39\xb8\x8b\xc6\x1b\x93\x6d\xb4\x7d\xde\xd6\x6b\xe0\xc4\xbc\x76\x5f\x03\x00\x00\xff\xff\x25\x6d\x7e\xc6\x00\x05\x00\x00")

func webTemplatesCommonHeadGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonHeadGoHtml,
		"web/templates/common/head.go.html",
	)
}

func webTemplatesCommonHeadGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonHeadGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/head.go.html", size: 1280, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesCommonMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x3d\x85\x65\x36\xb0\x60\x7a\x81\xb4\x0b\x38\x08\x72\x13\x8f\x5a\xd5\x38\x28\x6d\x90\x50\x34\x77\xc7\x30\x4d\x80\x61\xf5\x63\xfd\x67\x7f\xc7\xa5\x04\x3e\x2f\xca\x80\xaf\xac\x19\x2f\x97\xce\x29\xbd\x83\x17\xda\xb6\x01\xed\x39\x51\x82\xab\x3c\x1a\x49\x59\x76\x1c\x3b\x00\x17\x96\x46\xf9\xa8\x3b\xd9\x8c\xf4\xed\xfc\xf5\x8e\xd6\x99\x29\x34\xdf\x08\xba\xf1\xa7\x44\x1a\x10\xe6\xc4\xe7\x01\xef\x10\xa2\x3e\xcb\xe2\xd7\x01\xe7\x65\xdb\x63\xfa\x38\x4d\xe4\xd7\xfb\x07\x1c\x9f\x4c\x5d\x4f\x47\x50\x6f\x49\xff\x33\x7d\x14\xa1\xb7\x8d\xeb\xde\xb5\xfe\x89\xcf\xf2\x2b\xbf\x62\x26\x8d\x28\x65\x92\xe8\xd7\xeb\x55\x5e\xbe\x3e\xc8\xba\x23\x9c\xec\x3e\x15\x60\x0d\xad\x72\x7d\x96\x9b\x95\x8e\x87\xeb\x6d\xec\xd8\x95\x02\xc6\x83\x35\x7c\x06\x00\x00\xff\xff\x42\x5b\x78\xaf\x71\x01\x00\x00")

func webTemplatesCommonMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonMenuGoHtml,
		"web/templates/common/menu.go.html",
	)
}

func webTemplatesCommonMenuGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/menu.go.html", size: 369, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorDetailsGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x59\x5f\x8f\xdb\xb8\x11\x7f\xf7\xa7\x98\xaa\x0f\x2b\xe1\x6c\x79\xff\xbc\xc5\xbb\x06\xda\x0d\xda\xe4\x7a\xb7\x17\x34\xc1\xe5\x21\x0d\x0e\xb4\x44\xdb\x4a\x24\xd1\x15\x69\x7b\x5d\xc3\xdf\xbd\x33\xa4\x44\x91\xb2\xbd\xf6\xa5\xbb\xc0\x05\x5d\x04\x59\x9b\xf3\x97\xc3\x99\xdf\x0c\xb9\xdb\x6d\xca\xa7\x59\xc9\x21\x48\x44\xa9\x78\xa9\x82\xdd\xae\x77\x9b\x66\x2b\x48\x72\x26\xe5\x5d\x50\x89\x75\x30\xee\x01\xb8\x6b\xc4\xca\x50\xa8\xd2\x94\x2e\x2d\x1f\x14\xe9\xe0\xea\xba\xa1\xcd\xaf\xc6\xdb\x6d\xac\x32\x95\xf3\xdd\xee\x76\x88\x5f\xf7\x64\x16\xac\xe4\x39\xe8\xff\x07\xe8\x0e\x5b\xe6\xaa\x96\x3e\xce\x37\xe7\x2c\xcd\xca\x99\xe5\x23\x4b\x37\xe3\x0f\x6c\x92\x73\x90\x8a\xa9\x4c\xaa\x2c\x91\x68\xef\xc6\x6a\x1a\xa2\xaa\xa3\x6a\x07\x13\x91\x6e\x5c\x6d\x4a\xab\xaa\x59\xcc\x17\xfd\xff\x40\xaa\x2a\x5b\xf0\xd4\xe1\x25\x6e\xf2\xc7\x5d\xa1\xb5\xca\x5f\xd0\x6c\xa0\x23\x41\x46\x2b\xfc\x94\x89\x12\xca\x65\x31\xc1\x50\x02\x46\x5a\xa2\x2b\x77\x01\x86\xee\x5d\x43\xbd\x1d\xaa\xf9\x13\x5a\xde\xe3\x4e\x97\x12\xc4\x14\xd0\x01\x58\x54\x22\xe1\x52\x8a\x8e\x32\x62\xe2\x27\x14\x3d\x68\x27\x48\x51\x81\x1a\xd8\x8c\x4b\xc8\xd9\x6c\x86\x11\x86\x09\x9f\x67\x65\x0a\x6f\x3e\xfe\xec\xab\xfd\x65\x3a\x95\x5c\x0d\x7e\x62\xb3\x13\xba\xdf\x64\xb3\x39\xac\xd1\x87\x0a\x0a\x56\x7d\x85\x50\x68\xc9\xc6\xeb\x92\x3f\xaa\xc6\x2a\x1a\x23\x93\x98\x60\x72\x59\xf0\x34\xf2\x2d\xa2\x0b\xc7\x4c\xb9\x6c\x1f\xab\x4c\xf1\xc1\x3f\x9f\xd8\x34\x26\xa9\xe1\xbe\x09\xc6\x6f\xcb\xc5\x52\x9d\x64\xa4\xfd\x2e\xd5\x41\x4e\x5c\xa9\xce\x39\xf9\x71\x75\xdc\xa3\xf1\x64\xa3\xb8\x3c\x46\x4c\x79\xce\x36\xc7\x88\xdf\xa0\xb5\xeb\x31\x71\x74\xd2\xf7\x56\x51\x3d\x40\x96\x3a\x99\xfa\x6b\xc6\xd7\x41\x47\x8e\xb8\x9c\xa2\x19\xea\x12\x39\x50\x71\xf5\xc7\xde\x76\x9b\x4d\x81\xff\x1b\xe2\x8a\x97\x29\xaf\x3e\x6c\x16\x08\x3d\x6d\xde\x22\xf8\x68\xee\x17\x01\x87\x7b\x31\xf8\x51\x20\x6c\xa5\xa0\x61\xe2\x7b\x02\x87\xb3\x01\xe1\x83\x58\x64\x49\x5d\x45\x5f\xf4\x66\x03\x03\x8a\xdf\x08\x24\xcf\x08\x1e\x7f\x2c\xc0\xa8\x4d\x11\x4a\x78\x8e\xaf\x11\x3c\xb0\x0f\x82\x12\x90\x8b\x84\xe5\xba\x99\x60\x44\xd0\x17\xc9\xd1\x4c\xfa\x34\xbe\xfc\xbe\xd2\xa2\x13\x7a\x86\xaa\xda\x6e\xb1\x98\xb0\x74\xcc\x9a\x4c\x30\x05\x15\x28\x2c\x2d\xcc\x4d\x8c\xd5\xf0\x0b\x5b\x31\xb3\x8a\x86\x6a\x2d\x2b\x56\xe1\x21\x49\x65\x13\x0b\xee\x20\xbd\x89\xf5\x9e\xc3\x68\xd4\xe1\xa2\xba\xa1\x4c\x90\x47\xb9\xa4\x4e\xa0\x9f\xd9\x02\x39\xb6\x97\xaf\x20\xa8\x30\x5a\x2b\x5e\x51\x19\xf6\xe1\xea\x15\x16\x39\xc7\xb4\x36\x5f\xaf\x89\xbe\x2c\x4b\xfa\xb6\x1b\xb9\x2e\x19\x58\x78\xcd\x71\xbe\xc8\xc9\xd8\x74\x59\x26\xe4\x5d\x68\x4b\x42\x46\xdb\x9e\x0d\x0d\x89\x2c\x17\x29\x1e\x85\xdd\xc7\x3b\x8d\x03\x8e\x24\x52\x19\xca\xb4\x01\x26\x21\xab\xee\x6d\x4a\x5b\x42\x96\x4f\x97\x9f\x47\x1d\x26\xd9\xec\x98\xc8\x57\x9f\x47\xbd\x03\xf4\x25\x31\xd8\xcd\x7f\xd2\x22\xb1\xae\xb8\xd8\xd4\x94\x2f\x96\x4d\xc3\x0e\x4b\x9e\x63\xda\x6e\xbd\x24\xb2\x7a\x03\x69\xe8\x81\xeb\xd9\xae\xe3\x85\x29\x0e\xac\xaa\xda\x91\x46\xf7\x9b\x75\x01\x03\x6f\xc5\x14\x20\x2e\x5e\xa1\x4f\x8e\x96\xe1\x10\xb2\x12\xa3\xc1\xf2\xec\x3f\x9c\x4a\xac\x80\xc9\x06\x6a\xb0\xed\x58\xa3\xfa\xe0\xba\x6a\xee\xe0\xb2\x1b\xb0\x8c\x7a\xe9\x93\xc4\xbf\x52\x47\x3a\x44\x15\xba\xbb\x1e\x93\x35\xd4\xa3\xc2\x5a\xf5\x6b\xea\x92\x48\x1d\x5c\x8d\xfc\xbd\x61\x08\x2a\x05\xeb\x0c\xab\x9e\x41\x32\x67\xba\x05\x08\xac\x68\xa6\xf3\x1e\xff\x11\xaa\xe8\x39\x80\xa0\xc0\x44\xec\x90\x85\x7b\x92\x45\x0b\xbf\xc5\x5a\x4b\x7d\x92\x5a\x30\xea\xd8\xc4\x2e\xb7\xe6\x90\x0a\x98\xb3\x15\x47\x0d\xf9\x12\x3d\x47\x4c\x99\x61\xfc\xc9\x1a\x5b\xcd\x60\x5a\x89\xa2\x0f\x39\x57\x17\x48\x62\x5f\x39\x64\x2a\x3e\xa4\x05\x5b\x0a\x39\x5c\x02\x2b\x81\x17\x0b\xb5\x81\x1c\xa7\xdb\x3e\xb2\xc3\x5a\x2c\xf3\x14\x92\x8a\x53\xdc\x18\x3c\xb0\x07\x3f\xd7\x5a\xb7\x63\x89\x67\x1b\x46\xb1\x76\x25\x8c\x60\x0c\x97\x9d\xac\xf3\x82\xe8\x08\x4e\x73\xa6\x30\xb5\xc3\x40\xd3\x82\x28\x2e\x38\x2b\x1d\x4d\x43\xb8\xba\xd4\x3f\x7e\x92\x76\x12\xcc\x6c\x33\x99\xf3\xe4\x6b\xbd\x2d\x1d\x19\x86\xbd\x86\xaf\x32\x81\xe9\x4e\x55\x46\xe9\xc9\xb0\x5f\x48\x13\xa6\x82\x42\x86\xbf\xb3\xca\x57\x96\x88\x0a\xe1\x45\xd5\x71\xed\x1c\x15\xe1\x55\x83\x55\x1e\xc2\xc5\x18\xfc\x50\xcd\x33\x19\x75\x4b\xd2\x8a\x74\x42\xa2\x4d\x2d\x36\xfa\xc4\x0c\x18\xa0\x3f\x6c\x25\xb2\x14\x0a\x91\x66\xd3\x0d\xf5\x1e\x3c\x06\x8c\x56\xce\x12\xee\xc9\x92\x2b\xc9\xb2\x6a\x3c\xf9\xf1\xfd\x2f\x0f\x31\xa2\x8e\xe4\xa1\xfe\x48\x83\x42\x39\x43\x15\x26\x8b\x22\x2f\x81\xb4\x65\xd4\x3f\x25\x7b\x36\x40\xc6\x03\xcc\x40\xd3\x88\xe4\x9e\x39\x95\x15\xfc\x35\x49\xdd\x41\x58\xf2\x35\xbc\xc6\xac\x08\x1b\x1f\xe2\x07\xb1\x8e\xb0\xf6\x2d\xc1\x6e\x5a\x53\x9a\x73\x8c\x2f\x7d\x47\xdc\x7a\x6f\x75\x75\xf0\xa4\x55\xe5\x12\x48\x65\xe3\x92\x17\x71\xb0\xe0\x6c\x4e\x90\x18\x42\x31\xf9\xf2\x2b\x7d\xe9\x83\xac\x12\xfd\x29\x82\x6d\xa7\x71\x57\x5c\x2d\xab\x72\x6f\x19\xe0\x5e\x2c\x4b\xf5\x0a\x1a\x1d\xb1\xfe\x4e\xe8\x57\xab\x32\x0b\xfd\x3d\x39\x8d\x28\x8e\x9c\x41\x18\x47\x4e\x2f\x74\xe5\x76\x7e\x88\x76\xbd\xbd\x93\x98\x55\x62\x89\x63\xa0\xc1\x14\x02\x8c\x82\x57\x33\xfe\x11\x21\xa8\x8d\xa1\x26\xf6\x9d\xd8\xd5\x0b\x36\x24\x9d\x94\x70\xc1\xb5\x41\x20\xd7\x4e\xd4\x56\xaa\xde\x2d\x56\x2a\xce\x44\x5e\xa1\xb6\xa7\xb1\xa7\xb8\xc1\xd6\x13\x9a\x35\xdb\x93\x9a\x8f\xc5\xc2\x5c\x9f\x8e\x05\xc3\x50\xdd\x68\x34\x2b\xc7\xc2\xe1\x35\x8c\x8e\xd7\x46\xf6\x9b\x03\xe2\x77\x9b\x53\xba\x4f\x87\xc4\x4d\x95\xf6\xb3\x8f\x4d\xb2\xc6\xa6\xbe\x29\x73\x1f\xa2\xea\xbc\xbf\xb8\x55\xe9\xf8\xe2\x07\x67\x76\xf9\xe1\x02\x87\xc3\x74\xfc\xaf\xf2\xe2\x07\x6f\x07\x35\xa7\x19\x24\x4e\x30\xd9\xf9\xe1\x0c\x65\xce\x6c\x71\x82\xdb\xe2\x46\xac\xc4\xdf\xb2\x47\x9e\x86\xd7\xd1\x09\x11\x9b\xe0\xbf\x53\x44\x1f\x80\x95\xb9\x3c\x4b\x46\xf7\x32\xcf\x0e\x14\xf2\xe9\x30\xd9\x7c\x3b\xdf\x3d\x27\x91\x0e\xfa\xd7\xa6\xc6\xce\x39\xef\xf3\xee\xc8\xe6\xc7\x16\x18\x26\x6a\x3b\x22\xc7\x7f\xa7\xa5\x91\xa3\x91\xe7\x92\x9f\x23\x68\x13\x52\x7a\xd2\xed\xf5\x82\x7e\xb0\x39\x69\x03\xe6\x1e\xdd\xdb\x53\xf9\x13\x8e\x27\xba\x70\x94\x78\xc7\xb2\x4a\x9a\xd2\xc1\x0a\x11\x95\x0a\xed\x5c\xce\xfa\x93\x68\x5b\x67\xb6\x6e\x8c\x6f\x4b\x15\xd2\x18\x4e\x5d\xca\x2e\x4c\x68\x61\xb4\x73\x8a\x1f\xad\x9b\x91\xbf\x0f\xbc\xa4\x3b\x22\x0d\x0c\x15\x2f\xf0\xb6\xa1\x67\x08\xcf\x9f\xd4\x5c\x58\x24\xcf\x71\x5e\x08\x83\x3f\xfb\x8f\x19\x51\x4d\xf8\x4b\x9e\x87\x41\x6c\x69\x13\xf1\x88\x24\xd2\x15\xda\xfd\xf4\x9d\x0b\x45\xb4\x6d\x2a\x32\xa5\x5b\x03\xb8\xde\xa5\xf1\x5c\x15\x79\x78\xe8\x52\xe2\x72\xbd\xbc\x4b\xb1\x0e\x0e\x22\x12\x5b\x2c\xf0\xfc\xc2\x40\x55\xa8\x41\x3f\x59\x60\x16\x06\x9e\xe6\x3e\xce\x98\xd8\x6f\xcf\x73\x3d\xe6\x8f\x99\x42\xbd\x26\xe4\x61\x74\xee\xa3\x4e\x73\x24\x46\x3f\xdd\x28\x5f\xea\xaa\x76\x73\x90\xfc\xdd\xde\xd4\x7c\x25\x9d\x0b\xd8\x1f\x65\xca\xb6\x2f\x04\xff\x9f\x53\xb6\x7c\xae\x11\xfb\x60\x16\x9c\x33\x5f\x1f\x4e\x3b\xff\x68\x5e\x64\xc8\xa8\x5f\x47\xbe\xd7\x51\xc4\xeb\xc1\x4e\x62\xdc\x8b\xfa\xb1\xb8\x6d\x89\x1e\x8c\xd1\xdb\x9d\x6d\x74\xcd\x30\xd8\xb6\x3c\xa7\xa7\x1a\x3d\x91\x03\xd7\xab\xfd\xeb\x4d\x1d\x7d\x1c\x8e\x51\x8d\xa6\x63\x4c\x1d\x91\xac\x2c\x79\x55\x5f\x90\xbe\xf2\x4d\xf7\x6e\xa4\xdf\x28\xd2\x7f\x70\xba\xbb\x53\xfa\xbd\xd7\x89\x5f\x2b\xc2\x0e\x1a\x63\x2e\x27\x4c\x85\x24\xea\x67\x5f\x6d\xf8\x93\xed\xb8\x56\x46\x1b\xea\x1b\xb5\xf8\xcb\x3a\xe0\xa1\xab\xdb\xfb\x76\xfb\x2d\x1e\x26\xbe\xa7\x08\x03\x04\xdf\xf0\xa7\x3b\xd0\x9d\xbd\xb3\x8d\xda\x19\xcd\x32\xd0\x1c\xc7\x12\xdb\x72\x5e\x7d\x36\xcf\x91\xfc\x5e\x14\xb8\x07\x8e\x13\xc3\xd5\x67\xcf\xa9\x51\xef\x79\x66\x07\xfb\x5a\x7b\xba\x47\x37\xc9\x71\xac\x45\x5f\x3f\x35\x35\xd8\xd6\x78\x64\x60\x78\x76\x3f\xfe\xc7\x51\xe1\xa0\xbf\xdd\x29\x61\xd4\x6b\x9e\xa9\xe9\x10\x66\xd8\x70\x78\x81\x70\x8e\xa0\x87\x8b\xd4\xab\x08\xfd\x13\x3c\x42\x51\xa2\x37\x90\x49\x28\x45\xfb\x77\x88\xe6\x04\xdb\x31\x79\x9d\x95\xa9\x58\x13\xa2\xbd\x25\xe7\x31\x69\xdb\xb4\x73\xb3\x0a\x03\xf7\x45\xe2\x5a\xb0\xdd\xc6\x13\xec\x7c\xbf\x2d\x98\x9a\xef\x76\x43\x0a\xcf\x10\xd7\xda\x91\x05\x17\xf1\x3b\x1e\xbc\x8c\xb3\xf4\x71\xb7\xc3\xad\x7a\xaf\xd1\x76\x77\xbb\x3e\x5c\x23\x8c\xb7\x79\x45\x0d\x0c\xbb\xbf\xe9\x51\xfa\x1d\x35\xdf\xf4\x5e\xc0\x7c\xfd\xe6\x6f\x9e\xf2\xf5\x1f\xe5\xcd\xfb\x7f\xe7\xcf\x00\xff\x0d\x00\x00\xff\xff\x86\xe7\xae\xf6\xd4\x1f\x00\x00")

func webTemplatesMonitorDetailsGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorDetailsGoHtml,
		"web/templates/monitor/details.go.html",
	)
}

func webTemplatesMonitorDetailsGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorDetailsGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/details.go.html", size: 8148, mode: os.FileMode(436), modTime: time.Unix(1513779950, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x95\x51\x6f\xd3\x30\x10\xc7\xdf\xf7\x29\xac\xa8\xf0\x44\x13\x31\xed\x69\xa4\x91\x00\xa1\xaa\xa3\x5a\x2a\x48\x79\x45\x6e\x7c\x6d\x2c\x32\xdb\x72\x9c\x15\x14\xf9\xbb\x63\xa7\x49\x48\x9d\x96\x3c\x94\x4d\xec\xa5\xb5\x7d\xff\x3b\xff\x7c\xbe\xf8\xaa\x8a\xc0\x96\x32\x40\x5e\xca\x99\x02\xa6\x3c\xad\xaf\x42\x42\x1f\x51\x9a\xe3\xa2\x98\x79\x92\xef\xbd\xe8\x0a\xa1\xfe\x9a\x95\x62\xe3\x24\x6b\x8b\x6b\xcb\xa7\x0f\x64\xfa\xf6\xba\xb1\x19\x6b\x76\x1d\xad\x24\x4f\xa1\x28\xb8\x2c\xc2\xc0\x4c\x1b\x4b\x55\x4d\x36\xb8\x80\xef\x02\xab\x0c\xdd\xce\x90\xdf\xcd\x0c\x44\x2b\x91\x98\xed\x00\x4d\x28\x23\xf0\xf3\x0d\x9a\x88\x36\x52\xed\xd0\xcd\x8a\xce\x63\x0c\xc7\x55\x08\xcc\x20\x47\xf5\xef\xd4\xe4\x02\x97\xb9\x3a\xd2\x9e\x50\x4f\x33\xc0\x84\xb2\x9d\xa3\xb3\x47\xbd\x39\x16\x2a\xaa\x72\xf0\xa2\x10\xa3\x4c\xc2\x76\xe6\xf5\x4f\xac\x75\xd0\xe1\x07\xc6\x50\x9f\x50\x6b\x2f\x32\xe3\xce\xe0\xcf\x25\x16\x99\xf9\xe5\xa5\xd0\x3a\x0c\xf0\x60\xcb\x20\xbb\x71\x70\x03\xc3\x3b\x76\x82\x0d\x27\xbf\x06\xf8\x55\x85\xf6\xd4\x5c\xc5\x64\x67\x37\xb5\x09\x76\x41\x50\x2f\xcd\x4d\xe8\x32\x77\xc3\xf4\x6e\x0d\xc8\x0e\x16\xc4\xde\x9b\x1d\xd5\x11\xeb\xd8\xfe\x82\x89\x52\x7d\x55\x12\xf0\x43\x31\x88\x69\xa2\xe6\x34\x5a\xdc\xaf\xd6\xc9\xad\x2d\x12\xeb\xeb\x27\x5c\xd0\x54\x6b\xf4\x5a\x62\x29\xdf\x99\x65\x21\x29\x53\x5b\xe4\xbd\x4a\xbc\x43\x78\xff\x23\x27\x90\xda\x2c\x19\xef\x13\x4c\xc0\xc8\x89\xad\xc6\x59\xef\xb8\xd9\x28\xc1\x9b\x1c\xce\xa1\xde\xc5\x8b\xfb\xff\x02\x75\xc9\xf9\x8f\x52\xfc\x95\x75\x19\xc7\x9f\xd7\xab\xe7\x80\x6d\x6b\x89\x37\x44\x3d\xce\x79\xb7\x78\x86\x72\xfe\x25\x5e\xaf\x92\xf7\x1f\x96\x9f\x6a\xd2\x3f\x41\x46\x78\x7b\xc2\x8b\xa8\x73\xce\xc5\x71\x5e\xc5\xa1\x5a\xcf\x67\xf5\x90\x53\xeb\x38\xc2\x58\x4b\x9e\xa8\x00\xe2\x52\x8d\x7e\x58\xf1\x3a\x79\x86\x2f\x2b\x0c\x86\x2f\x83\x79\x60\x8c\xd4\x7d\x44\x06\x0f\x96\xb3\x70\x34\xed\x6f\xd6\x19\x9a\xc1\xc5\x6d\xea\x1b\x85\xfd\xc5\x1d\xea\xd1\x04\xa9\xb5\x76\xf0\x32\xfb\x92\x25\x77\x5b\x92\x5d\x6b\x4b\xe5\x49\xfb\xd0\x3f\x2b\x87\xe6\xaf\x95\xfc\x0e\x00\x00\xff\xff\x33\x4f\x5a\x19\xeb\x08\x00\x00")

func webTemplatesMonitorIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorIndexGoHtml,
		"web/templates/monitor/index.go.html",
	)
}

func webTemplatesMonitorIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/index.go.html", size: 2283, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8e\xc1\xaa\xc2\x30\x10\x45\xf7\xef\x2b\x86\xd0\xc5\x13\xa4\xd9\x4b\xda\xad\x3f\xe0\xbe\xc4\x76\x6a\x03\x3a\x09\x49\xab\x42\x98\x7f\x77\xa2\xd0\x55\x11\x37\xc9\xc0\x3d\xdc\x7b\x72\x1e\x70\x74\x84\xa0\x6e\x48\x4b\xd7\x7b\x9a\x91\x66\xc5\xfc\x97\x73\xb4\x74\x41\xa8\x1c\x0d\xf8\xdc\x43\x15\xa2\xef\xe1\xd0\x40\x5d\x0e\x4c\xc9\xc7\x24\x18\x80\xb9\xba\xd6\x58\x98\x22\x8e\x8d\xca\xb9\xaa\xcf\x36\x61\x17\xec\x3c\x31\xeb\x95\xd5\x92\xbc\x9b\x98\x55\x2b\x77\x09\xea\x63\xb4\x61\x92\xd7\x2f\x81\x19\xfe\x57\x78\x67\xb4\x6d\x8d\x96\x62\xd1\x40\x1a\xbe\xea\xdc\x1d\x3e\x7e\x30\x29\xd8\xa6\xc4\xc9\x07\xd7\x97\xf9\x42\x6c\x2e\x7f\xfe\x57\x00\x00\x00\xff\xff\xfc\x37\x76\xe3\x2b\x01\x00\x00")

func webTemplatesMonitorMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorMenuGoHtml,
		"web/templates/monitor/menu.go.html",
	)
}

func webTemplatesMonitorMenuGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/menu.go.html", size: 299, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesQueryIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xcb\x6e\xdb\x3a\x10\xdd\xe7\x2b\x26\x82\x71\xb3\xb8\x95\x85\x26\xbb\x46\x56\x37\xcd\xaa\x40\x81\xa2\x8b\x2e\x03\x5a\x1c\x4b\x44\x69\xd2\xe5\x23\x8e\x61\xf8\xdf\x3b\x12\x25\xc5\x96\x69\x25\x45\x51\xa0\x02\x2c\x7b\x34\x0f\x9e\x39\x3c\x1c\x6b\xbf\xe7\xb8\x12\x0a\x21\x29\xb5\x72\xa8\x5c\x72\x38\x5c\xe5\x5c\x3c\x41\x29\x99\xb5\x8b\xc4\xe8\x6d\x52\x5c\x01\x5d\xc7\x4f\x9b\x60\x46\x69\xa6\xf3\x8d\xfd\x2f\x59\x31\x6f\xa9\x65\xba\xe6\xe9\xfb\xdb\x51\x0c\x45\xd5\xb7\xc5\x57\x8f\x66\x07\x9f\x71\x67\xf3\x8c\xcc\x51\xc4\x7e\x2f\x56\x30\x47\x63\xb4\x21\xa4\xa3\xec\xa3\x35\x98\x44\xe3\xa0\xbd\xa7\x9c\xa9\x0a\x4d\x6f\x08\xbb\x16\xd6\x8a\xa5\xc4\x04\x8c\x96\xd8\xc5\x9e\x61\xa1\x7a\x4b\xef\x9c\x56\xe0\x76\x1b\x8a\x0a\x46\x32\x34\x21\xb5\xa5\x0a\x9c\x39\xd6\xd7\x1c\x2a\xe5\x76\xc3\x54\xf1\x9f\x13\x6b\xb4\xf7\x79\xd6\x5a\x79\x16\x0a\x44\x96\xb1\xce\x68\x55\x15\x0f\x4d\x53\xd7\x14\x1e\x4c\x6a\x35\xf4\x39\x7f\x88\x77\x9b\x51\xbb\xe7\xf4\xa0\xe2\x67\xa1\x81\xb4\x2d\x33\x4a\xa8\xea\xcd\xb4\x75\xf1\xff\x3c\x6f\xdf\x03\xce\x53\xe6\x3a\xf0\x7f\xce\x5d\xcf\x9e\xd5\xde\x94\x68\x23\xfe\x7c\xa5\xcd\x1a\xb4\xb2\x7e\xb9\x16\x6e\x91\x6c\x85\xe2\x7a\x3b\x97\xba\x64\x4e\x10\x0d\x0b\xb8\x21\x40\x4b\x66\xf1\x71\xc3\x5c\x7d\x38\x64\x64\x5a\x94\x58\x3a\xe4\x8f\xa1\x2e\x3d\xbc\x81\xff\xc1\x22\x33\x65\x3d\x7f\x62\xd2\xe3\x3d\x18\x74\xde\x28\x58\x31\x69\xf1\x3e\xc2\xf3\x78\xf3\x84\xda\x78\x97\x56\x46\xfb\x0d\x1c\xfd\x4e\x65\x75\x21\x79\xa2\x40\xba\x74\x6a\x22\xab\xcd\x9c\xda\x66\x4a\x07\xfa\xa4\x34\x5e\x98\x97\x0e\xb8\xd1\x1b\x62\x45\xa5\x4e\x57\x95\xec\x05\x10\x8c\x45\xd2\x7b\x93\x22\x46\x4d\x2b\x8b\x41\x3f\x8c\x68\x21\xa9\xbc\xa6\x8e\x13\xa4\x5e\xf6\xe9\x03\x8e\x35\x2a\xff\x4a\x83\xcd\xb5\xdf\xcf\x86\x9d\x83\x0f\x0b\x38\xde\xc7\x37\x24\x9b\x66\xf4\xc0\x8c\x14\x81\xcf\xef\x60\x16\x3a\x6a\xeb\x5c\xd6\xd3\x19\x7a\x29\x8a\x9c\x41\x6d\x70\xb5\x48\x8e\xf1\xb4\x4a\x9a\xf5\x2c\x35\xdc\x0d\x46\x9e\x31\xe2\x86\x12\xdf\x80\x31\xae\xfa\x13\x04\x99\x97\x13\x0a\x8a\x1d\xa6\x23\x77\xab\x2a\x10\x7c\x91\x04\x79\x27\x9d\x62\x1c\x3e\xbb\x41\x2f\xcd\x19\x4a\x9b\xbf\x15\x1a\x2d\x34\x5f\xf0\xa7\x17\x06\xf9\xdf\x97\x6d\x38\xb4\x97\x64\x9b\x14\xdf\x5a\xc8\xaf\xcb\x6c\x82\x84\x0b\xae\x3c\x6b\x7a\x3e\x7f\x4e\x1b\x42\xe7\x3d\x36\x67\xa6\xe7\xf4\x68\x2a\x7f\xd1\xd0\x49\x0c\x56\xda\x2b\x7e\x0d\x9f\x04\x87\x9d\xf6\x64\x9a\x0a\x1d\x38\x0d\xcc\x39\x56\xd6\xe0\x6a\x5c\x7f\xbc\x80\x32\x26\x8f\x51\xe8\xc8\x0c\xe3\xb2\x1d\x61\x47\x79\x79\x6d\xb2\xf8\xbb\x02\x1d\x63\x94\xd0\xde\x87\x69\x11\x2c\xeb\x4b\x82\x6f\x27\xde\x24\x42\x5c\x8d\x8c\x37\x04\x44\x38\xae\xef\x4e\x43\x9d\x70\x34\x7c\x9a\x29\xf3\x03\x77\xcd\x31\xa9\xef\x8a\xa9\xde\xe2\x0b\x2e\x35\xdf\xc5\x56\xdb\x18\x6c\x4a\x77\xbd\xe7\x59\x63\xff\x16\x73\x2f\x5c\x77\xae\xee\xab\xf7\xfc\x0a\x00\x00\xff\xff\x05\xda\xbe\x9a\xaf\x09\x00\x00")

func webTemplatesQueryIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesQueryIndexGoHtml,
		"web/templates/query/index.go.html",
	)
}

func webTemplatesQueryIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesQueryIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/query/index.go.html", size: 2479, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesIndexIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x4d\x6e\xc3\x20\x10\x85\xf7\x3e\xc5\x08\x65\x59\xc7\x6a\x95\x55\x65\x7b\xd1\x03\x54\xbd\xc2\xc8\x4c\x02\x12\x1e\x22\xa0\x3f\xd2\x88\xbb\x97\x46\x34\x2d\x6e\x15\x2f\x0c\x33\xef\x83\x37\x0f\x11\x4d\x47\xcb\x04\x6a\xf1\x9c\x88\x93\xca\xb9\x1b\xb5\x7d\x83\xc5\x61\x8c\x93\x0a\xfe\x5d\xcd\x1d\xc0\xef\xde\x17\x8a\xe5\x50\xb8\x28\x5b\xcd\xf5\xab\xee\xef\x1f\xaa\x06\x20\x12\x90\x4f\x04\x3b\xcb\x9a\x3e\xee\x60\xb7\xf8\xf5\xec\xb9\x78\xc1\xe3\x04\xfb\x6b\x15\x8b\x33\xd4\xef\xf6\x8d\x5b\xe2\x8c\x4c\x0e\x2e\xff\xbe\xc4\xc1\x57\x97\x1a\xf6\x1f\xba\x37\x84\xda\xf2\x69\xc3\x15\xd2\x1c\x5a\x30\xd9\xe4\x48\xcd\x23\x82\x09\x74\x9c\x94\xc8\x4f\x80\xfd\x13\x46\x7a\xc1\x64\x72\x1e\xd4\xdc\x28\xcf\xb8\x52\xce\xe3\x80\x7f\x0c\x06\x73\x98\xbb\x76\xba\xa1\x8c\xd7\x84\x6b\x1b\x4d\x29\x42\xac\xeb\x53\x5d\x85\xba\xa9\xcb\x37\xf2\x19\x00\x00\xff\xff\xcd\x13\xfe\x16\xdd\x01\x00\x00")

func webTemplatesIndexIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesIndexIndexGoHtml,
		"web/templates/index/index.go.html",
	)
}

func webTemplatesIndexIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesIndexIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/index/index.go.html", size: 477, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"web/templates/common/base.go.html": webTemplatesCommonBaseGoHtml,
	"web/templates/common/head.go.html": webTemplatesCommonHeadGoHtml,
	"web/templates/common/menu.go.html": webTemplatesCommonMenuGoHtml,
	"web/templates/monitor/details.go.html": webTemplatesMonitorDetailsGoHtml,
	"web/templates/monitor/index.go.html": webTemplatesMonitorIndexGoHtml,
	"web/templates/monitor/menu.go.html": webTemplatesMonitorMenuGoHtml,
	"web/templates/query/index.go.html": webTemplatesQueryIndexGoHtml,
	"web/templates/index/index.go.html": webTemplatesIndexIndexGoHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"web": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"common": &bintree{nil, map[string]*bintree{
				"base.go.html": &bintree{webTemplatesCommonBaseGoHtml, map[string]*bintree{}},
				"head.go.html": &bintree{webTemplatesCommonHeadGoHtml, map[string]*bintree{}},
				"menu.go.html": &bintree{webTemplatesCommonMenuGoHtml, map[string]*bintree{}},
			}},
			"index": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesIndexIndexGoHtml, map[string]*bintree{}},
			}},
			"monitor": &bintree{nil, map[string]*bintree{
				"details.go.html": &bintree{webTemplatesMonitorDetailsGoHtml, map[string]*bintree{}},
				"index.go.html": &bintree{webTemplatesMonitorIndexGoHtml, map[string]*bintree{}},
				"menu.go.html": &bintree{webTemplatesMonitorMenuGoHtml, map[string]*bintree{}},
			}},
			"query": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesQueryIndexGoHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

